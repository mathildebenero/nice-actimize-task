# nginx/nginx-secure.conf
# Edge in front of the SECURE app
# - Listens on :80 inside the container (we'll map host 8092 -> 80)
# - Proxies to the secure app on host.docker.internal:8082
# - Adds security headers, rate limiting, and sensible timeouts
# - HSTS is commented (enable only when TLS terminates at the edge)

events {
    worker_connections 1024;
}

http {
    # MIME & defaults
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Performance/timeouts (kept conservative for scans)
    sendfile            on;
    keepalive_timeout   15s;
    client_body_timeout 15s;
    send_timeout        30s;

    # Basic rate limiting: ~60 req/min per client IP (burst 10)
    # 10MB zone is plenty for many distinct keys
    limit_req_zone $binary_remote_addr zone=edge_limit:10m rate=60r/m;

    # Proxy defaults
    proxy_http_version          1.1;
    proxy_set_header            Host $host;
    proxy_set_header            X-Real-IP $remote_addr;
    proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header            X-Forwarded-Proto $scheme;
    proxy_set_header            Connection "";

    proxy_connect_timeout       5s;
    proxy_send_timeout          30s;
    proxy_read_timeout          30s;

    # Reasonable buffers (small app, small responses)
    client_body_buffer_size     16k;
    client_max_body_size        1m;
    proxy_buffers               8 16k;
    proxy_buffer_size           16k;
    proxy_busy_buffers_size     24k;

    # ---- SECURITY HEADERS (edge) ----
    # Mirrors your app-side policy; "always" ensures headers on 4xx/5xx too.
    # If you later diverge policies, the browser will apply the most specific/effective.
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; frame-ancestors 'none'; base-uri 'self'; object-src 'none'; form-action 'self'" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(self), fullscreen=(self), clipboard-read=(), clipboard-write=()" always;

    # Cross-origin isolation / Spectre hardening
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    add_header Cross-Origin-Opener-Policy  "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;

    # Hide server banner and avoid caching dynamic pages
    add_header Server "secure" always;
    add_header Cache-Control "no-store" always;
    add_header Pragma "no-cache" always;

    # HSTS: enable only when TLS terminates at the edge (not for plain HTTP)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    server {
        listen 80 default_server;
        server_name _;

        # Pass-through health (lightly rate-limited)
        location = /health {
            limit_req zone=edge_limit burst=5 nodelay;
            proxy_pass http://host.docker.internal:8082/health;
        }

        # Everything else
        location / {
            # 60 req/min + 10 burst, immediate rejection when exceeded (nodelay)
            limit_req zone=edge_limit burst=10 nodelay;

            # Forward to the SECURE app that your pipeline runs on host:8082 â†’ container:8080
            proxy_pass http://host.docker.internal:8082;
        }
    }
}
